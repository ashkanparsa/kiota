name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
 
trigger:
  branches:
    include:
    - main
    - azure-pipelines
 
pr: none
 
variables:
  buildConfiguration: 'Release'
  BUILDPLATFORM: 'linux/amd64'
  REGISTRY: msgraphprodregistry.azurecr.io # Azure Container Registry
  IMAGE_NAME: public/openapi/kiota       # Docker image name
  PREVIEW_BRANCH: "refs/heads/main"      # Branch for preview builds
  VERSION_SUFFIX: ""                    # Version suffix for preview builds

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

parameters:
- name: poolName
  type: string
  default: pt-validation-ppe

- name: image
  type: string
  default: pt-validation-ppe-linux

- name: os
  type: string
  default: linux

pool:
  name: ${{ parameters.poolName }}
  image: ${{ parameters.image }}
  os: ${{ parameters.os }}

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: ${{ parameters.poolName }}
      image: ${{ parameters.image }}
      os: ${{ parameters.os }}
    sdl:
      sourceAnalysisPool:
        name: Azure-Pipelines-1ESPT-ExDShared  # Name of your hosted pool
        image: windows-latest  # Name of the image in your pool. If not specified, first image of the pool is used
    stages:
    - stage: Build
      jobs:
        - job: build
          steps:
          - task: UseDotNet@2
            displayName: 'Use .NET 9'
            inputs:
              version: 9.x
          - task: UseDotNet@2
            displayName: 'Use .NET 8'
            inputs:
              version: 8.x
          # Install the nuget tool.
          - task: NuGetToolInstaller@1
            displayName: 'Install Nuget dependency manager'
            inputs:
              versionSpec: '>=5.2.0'
              checkLatest: true
          
          # # Build the Product project
          # - task: DotNetCoreCLI@2
          #   displayName: 'Build Kiota project'
          #   inputs:
          #     projects: '$(Build.SourcesDirectory)\kiota.sln'
          #     arguments: '--configuration $(BuildConfiguration) --no-incremental'


        - job: validate_docker_build
          # dependsOn: build
          displayName: Validate Docker Build
          pool:
            name: ${{ parameters.poolName }}
            image: ${{ parameters.image }}
            os: ${{ parameters.os }}
          steps:
            # Enable QEMU for multi-architecture builds
            # - script: |
            #     docker run --rm multiarch/qemu-user-static --reset -p yes
            #   displayName: Enable QEMU for multi-arch
            - script: |
                docker version
                docker info
              displayName: Show docker environment
            - script: echo "##vso[task.setvariable variable=BUILDNUMBER]$(Build.BuildId)"
              displayName: 'Set BUILDNUMBER variable'
            - script: |
                echo "Generated version_suffix: $(versionSuffix)"
              displayName: 'Show generated version_suffix'
            - powershell: |
                .\scripts\get-prerelease-version.ps1 -currentBranch $(Build.SourceBranchName) -previewBranch 'azure-pipelines' -excludeHeadingDash
              displayName: 'Generate version suffix'    

            # Build Docker image for validation (no push)
            - task: 1ES.BuildContainerImage@1
              inputs:
                image: $(REGISTRY)/$(IMAGE_NAME):validation    # Image name to build (including a tag). Required. Alias: localImage
                path: $(Build.SourcesDirectory)                 # Required. Alias: context
                dockerfile: ./Dockerfile             # Optional. Default: 'contextPath/Dockerfile'
                buildArguments: --build-arg version_suffix=$(versionSuffix)' # --platform linux/amd64,linux/arm64/v8         # Optional. Default: ''